<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dy.networkdisk.file.dao.FileNodeMapper">
    <select id="findUserRootID" parameterType="long" resultType="long">
        select id from file_node where userID = #{userID} and nodeType = 'FOLDER' and mimeType = 'ROOT';
    </select>

    <insert id="addNode" parameterType="com.dy.networkdisk.file.po.FileNodePO">
        insert into file_node (id, userID, nodeType, mimeType, parent, name, status, size, createTime)
        values (#{id},#{userID},#{nodeType,},#{mimeType},#{parent},#{name},#{status},#{size},#{createTime});
    </insert>

    <select id="selectChildrenIDByNodeType" resultType="long">
        select id from file_node
        where userID = #{userID}
          and parent = #{parent}
          and nodeType = #{nodeType}
          and status != 'DELETE';
    </select>

    <select id="selectChildrenByNodeType" resultType="com.dy.networkdisk.file.po.FileNodePO">
        select id, userID, nodeType, mimeType, parent, name, status, size, createTime from file_node
        where userID = #{userID}
          and parent = #{parent}
          and nodeType = #{nodeType}
          and status != 'DELETE'
    </select>
    <select id="findFileNodeByID" resultType="com.dy.networkdisk.file.po.FileNodePO">
        select id, userID, nodeType, mimeType, parent, name, status, size, createTime from file_node
        where id = #{id} limit 1;
    </select>

    <select id="checkSameNameExist" resultType="int">
        select count(1) from file_node
        where userID = #{userID}
          and parent = #{parent}
          and nodeType = #{nodeType}
          and name = #{name}
          and status != 'DELETE';
    </select>

    <select id="checkPermission" resultType="string">
        select status from file_node
        where id = #{id}
          <if test="parent != null">
              and parent = #{parent}
          </if>
          and userID = #{userID}
          and nodeType = #{nodeType}
    </select>

    <update id="rename">
        update file_node set name = #{name} where id = #{id};
    </update>

    <update id="delete" parameterType="long">
        update file_node set status = 'DELETE' where id = #{id};
    </update>

    <update id="deleteAll" parameterType="list">
        update file_node set status = 'DELETE'
        where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>;
    </update>

</mapper>